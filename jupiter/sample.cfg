#		sample.cfg: configuration file for the Jupiter speech system
#		Karl Dahlke's version - keeps your hands on or near the home keys.
#  But binding all these control letters isn't terribly compatible with
#  nano and such, which is I suppose why speakup has much of its
#  reading over on the numpad.
#  Well you can put things wherever you like.

#	Here are the straight function keys.
#	Basically, the first 5 function keys read the previous, current,
#	next, after next, and final lines, respectively.
#	F6 through f12 are assigned simple commands.

f1 stmode 1 sline back sline read
f2 sline read
f3 eline for read
f4 eline for eline for read
f5 clmode 1 lcline sline read
f6 toggle
f7 sbuf
f8 ebuf

#  modes that we often change
f9 toggle 1 speak "one line|continuous"
f10 toggle t speak "clicks on|clicks off"
f12 toggle a speak "autoreed|passive"

#	Left control keys let you interrogate the individual letters
#	 of a word, including case.
#	Ideally you wouldn't need this very often, but you do,
#	or at least I do, when correcting my own typos.

^s back char
^d char
^f for char
^r asword
^w colnum
^e prow char
^c nrow char

#	Note that the s d f c e arrangement moves the cursor up down left right
#	on the page, in a manner similar to some screen editors or a joystick.
#  You could bind the left right up down arrows to the same thing,
#  but it's probably better to pass arrows through to various curses programs,
#  SUCH AS NANO VI ETC, which then move the visual cursor on screen,
#  which the reading cursor can track.
#  For best response the arrow keys should, nonetheless, interrupt speech.
#  The t lets them have a function here in the adapter
#  and still pass through to the running program.
#  This is suppose to remind you of /usr/bin/tee.
up T shutup
down T shutup
left T shutup
right T shutup

#	Read the last line, or the last non-prompt line.
^n ebuf sline read
^b clmode 1 lcline sline read

#  top and bottom of buffer
^t sbuf
^v ebuf

#	You can assign ^m, and still use the return key,
#	and you can assign ^h, and still use backspace,
#	but I sometimes like to use ^m and ^h directly.
#	Hence I don't move from the home row.
#  So leaving those alone.

#	Don't put the bypass function too far away --
#	you need it for control C interrupt.
#	Or else don't map ^c to anything.
#	or else use stty to establish another interrupt key.
^q bypass

#	Notice that none of my keys locates the visual cursor on the screen,
#	or reads the letter/word/line at said cursor.
#	This is because I rarely use screen mode.
#	If you use screen oriented programs, such as emacs,
#	you can assign new cursor-based functions to the alt keys,
#	or to the control keys, replacing my definitions.
#	To get started, let control y jump to the visual cursor on screen.
#	From there you can use the existing control keys
#	to read the letters and words around it.
^y cursor

#	Right hand control keys move through the words in a line.
#	They can also take you to the start or end of a word,
#	and if you're a C programmer, youKnowHow LongWordsCanBe.

^j sword lspc back word
^k word
^l eword rspc for word
#  start and end of the word, for long words
^u sword char
^o eword char
#	You can assign ^i if you wish, and still use your tab key.

#	The zero key on the numpad is big, and hard to miss.
#	A good place for the shutup command.
#0 shutup
#	Nearby numpad keys let you look at the words you were
#	in the process of reading.
#  Bottom row words, middle row letters, top row start and end of line.
#1 sword lspc back word
#2 word
#3 eword rspc for word
#4 back char
#5 char
#6 for char
#7 sline word
#8 read
#9 eline back word

#	cut and paste
#  Bottom row mark words, top row mark the entire line.
@#1 sword mark1
@#3 eword mark2
@#7 sline mark1
@#9 eline back mark2

# the key binding command isn't used very often, not from the keyboard,
#  bindings are usually done in a config file, like this one,
#  so it can be an unlikely key combination.
+#7 bind

#  set markers in the text buffer, and jump to those markers.
#  Markers are a through z, like the labels a through z in ed or edbrowse.
#  I almost never use this.
+#8 label
+#9 jump

#  clear the buffer.
+#0 clbuf

#  Now some commands to control the synthesizer, speed, volume, etc.
+f1 decvol
+f2 incvol
+f3 decspd
+f4 incspd
^f1 incpch
^f2 decpch
^f3 incrng
^f4 decrng
+f5 voice

#	Note that f7 +f7 begins a search from the top,
#	while f8 +f8 starts the search from the bottom.
+f7 searchd
+f8 searchu

#  Hot keys to reload the config file and reexec the adapter.
#  You can use this to reload a config file,
#  or run the new executable after a bug fix or enhancement.
#  It should be an unlikely key combination that you won't hit accidentally.
#  Thus these are control alt keys.
@^#- reexec
@^#+ reload

#  Dump the current tty buffer to a file.
@^#. dump

#  suspend the adapter, another unlikely key chord.
#  Suspension is per console.
@^#0 suspend

#  run a chromatic scale
@^#5 step
#  For a pretty descending sequence of notes put this in /etc/jupiter/harp
#  8000,200,-10,40
#  Then hit alt control #5 and then type harp


#  pronunciations for the punctuation marks.
#  You can give the raw punctuation in ascii or utf8,
#  or the unicode in decimal or the unicode in hex.
#  u969 omega
#  x3c9 omega
#  These are just a few, and they pretty much agree with the defaults.

+	plus
-	minus
*	star
/	slash
?	quess
=	eequals
#  # is a comment line so this has to be unicode
x23	pound
$	dollar

#  some higher unicodes that I use for my math work.
x2286	subset of

# emojis that we run into
x1f600	grin
x1f418 elephant

#		reserved words in programming languages

goto  go too
sizeof  size of

#		Unix commands and functions

read  reed
fprintf  f printf
memcpy	memcopy
strlen	stringlength

#		computer science terms

readonly  reed only
whitespace	white space
localhost loacle host
sourcefile  source file
makefile	make file
filesystem	file system
foreach	for each
usr	user
linefeed  line feed
obj	obj
nil	nill

#		other common words

exit	eksit
mc	mik
an	ann
gmail g mail
etc etsetra

#		Macros

#  These are block comments in C
^f7</*********************************************************************
^f8<*********************************************************************/

#  System commands, formerly run by esekeyd.
#  The three keys at the top right decrease volume, increase volume,
#  and pause music, just like the Mac.
sysrq|amixer -q set Headphone 105-
scroll|amixer -q set Headphone 105+
pause|killall -q -s10 mpg123

#  two leading colons means execute these commands when file is loaded
:: volume 5 speed 8
